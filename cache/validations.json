{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\interfaces\\IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\beacon\\IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\BeaconProxy.sol:18",
        "version": {
          "withMetadata": "19dbeeedae0daf903ca3ccf2cad3444a3d879c8683a2bfc05e85372370ca795b",
          "withoutMetadata": "19dbeeedae0daf903ca3ccf2cad3444a3d879c8683a2bfc05e85372370ca795b",
          "linkedWithoutMetadata": "19dbeeedae0daf903ca3ccf2cad3444a3d879c8683a2bfc05e85372370ca795b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin\\contracts\\proxy\\beacon\\BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts\\UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "650c05ef7325084756a9f18bcc4188a7a952e037fd7eb6a6e9b813350ef82c3b",
          "withoutMetadata": "eba021a73bc2909f00a89d4c81793427c9b7b763aec146a0104bccb751aaeed7",
          "linkedWithoutMetadata": "eba021a73bc2909f00a89d4c81793427c9b7b763aec146a0104bccb751aaeed7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts\\UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts\\UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "ae7e8956bc2165845892e63d7cef8282f1be6efad14f6bd8a5fa150379215f49",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts\\BaseUri.sol:9",
        "version": {
          "withMetadata": "2c2d399b12a1978d2178aae1fe9de50903a4cc1fd6423da20444ea3b7c09335f",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts\\BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts\\ForwardCreator.sol:16",
        "version": {
          "withMetadata": "4d66fa615ecbc24eed73526591d86aec15971854f1034da0596610ec284daed1",
          "withoutMetadata": "4d76d48708131080d5147308a804903607b22d9beff9aeeacb75acba5b1f451f",
          "linkedWithoutMetadata": "4d76d48708131080d5147308a804903607b22d9beff9aeeacb75acba5b1f451f"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable",
          "console"
        ],
        "methods": [
          "initialize()",
          "getConfig()",
          "setConfig(address)",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts\\ForwardCreator.sol:23"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts\\ForwardCreator.sol:25"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts\\ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "_CONFIG",
              "type": "t_address",
              "src": "contracts\\ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts\\ForwardCreator.sol:31"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts\\ForwardCreator.sol:32"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts\\ForwardNFT.sol:25",
        "version": {
          "withMetadata": "b3c19588e1a0e00c41732ba63f255c4d04df0130504757e3f365f248c74f7cd2",
          "withoutMetadata": "451288f38695db701b9a50bf0294a9887710c44081fd876f68b8f6b1c9c68207",
          "linkedWithoutMetadata": "451288f38695db701b9a50bf0294a9887710c44081fd876f68b8f6b1c9c68207"
        },
        "inherit": [
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,address,uint256,string,string,string,string,string)",
          "price()",
          "setArtist(string,string)",
          "setArtistAccount(address)",
          "setRoyalties(uint256)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "isAdmin(address)",
          "hub(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(address)",
          "()",
          "withdraw()",
          "withdrawERC20(address)",
          "artistWithdrawPending()",
          "artistWithdrawPendingERC20(address)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_price",
            "src": "contracts\\ForwardNFT.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_priceBase",
            "src": "contracts\\ForwardNFT.sol:77"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_priceInterval",
            "src": "contracts\\ForwardNFT.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts\\ForwardNFT.sol:48"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts\\ForwardNFT.sol:51"
            },
            {
              "contract": "ForwardNFT",
              "label": "_hub",
              "type": "t_address",
              "src": "contracts\\ForwardNFT.sol:52"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\ForwardNFT.sol:55"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:58"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4457_storage",
              "src": "contracts\\ForwardNFT.sol:63"
            },
            {
              "contract": "ForwardNFT",
              "label": "_artistPending",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:64"
            },
            {
              "contract": "ForwardNFT",
              "label": "_artistPendingERC20",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\ForwardNFT.sol:65"
            },
            {
              "contract": "ForwardNFT",
              "label": "_treasuryFee",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:70"
            },
            {
              "contract": "ForwardNFT",
              "label": "_treasury",
              "type": "t_address",
              "src": "contracts\\ForwardNFT.sol:71"
            },
            {
              "contract": "ForwardNFT",
              "label": "_price",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:76"
            },
            {
              "contract": "ForwardNFT",
              "label": "_priceBase",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:77"
            },
            {
              "contract": "ForwardNFT",
              "label": "_priceInterval",
              "type": "t_uint256",
              "src": "contracts\\ForwardNFT.sol:78"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_struct(Artist)4457_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                },
                {
                  "label": "account",
                  "type": "t_address"
                }
              ]
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts\\ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "4497c78f3b6807ed59b2bf5408f2f6aef2cf6cff4b98ab8c3fe4b7162426a87b",
          "withoutMetadata": "c593f34f4636203fe833f627dab3477d7aebf0d288c342726560086255ba20b5",
          "linkedWithoutMetadata": "c593f34f4636203fe833f627dab3477d7aebf0d288c342726560086255ba20b5"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts\\ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts\\IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IConfig": {
        "src": "contracts\\interfaces\\IConfig.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTreasuryData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "contracts\\interfaces\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IForwardCreator": {
        "src": "contracts\\interfaces\\IForwardCreator.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getConfig()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "32d96f8c480c100b4b99dc01d88e6dbfb39fa88d41ca1132615098a66125687f",
          "withoutMetadata": "367e1b514eef6d0efed1442c88269ee14dce64ee7b5dee63d04344a922215c74",
          "linkedWithoutMetadata": "367e1b514eef6d0efed1442c88269ee14dce64ee7b5dee63d04344a922215c74"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "2d1b5dc39cca10a88e68564483332afd6d409fd78c715abe969cffeebde34e5b",
          "withoutMetadata": "dc793ba09a42c03f4f5fedc1eb6888ec24b2b8cca4bf72deeefb0add40e0292c",
          "linkedWithoutMetadata": "dc793ba09a42c03f4f5fedc1eb6888ec24b2b8cca4bf72deeefb0add40e0292c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "c33b65d88d16fe1b9b9727f226eac7358f793d85c8d47da7f1f1c43f50193678",
          "withoutMetadata": "b0da01971c12d237eea2ca84436d57ca1eeaa207d5fadcb51dfa0b6701721b0d",
          "linkedWithoutMetadata": "b0da01971c12d237eea2ca84436d57ca1eeaa207d5fadcb51dfa0b6701721b0d"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "406ca56da31b1f6a3d384e1ce97172ecc256900c3a4b3d218bb50fa3a3f0e0cb",
          "withoutMetadata": "0715b4a1091b13113f6150e71c12d43a8d8540f3e6c9302360a00f55dbe44b93",
          "linkedWithoutMetadata": "0715b4a1091b13113f6150e71c12d43a8d8540f3e6c9302360a00f55dbe44b93"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "678aa4e2111cd69ee73c223dc8b24c43128acea65902c07730f20abd51e3f849",
          "withoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904",
          "linkedWithoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "11d0ce2cb880d4b21e2b71d495dc947656c8dd84e8d3395c8618c6d3ef3f229f",
          "withoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4",
          "linkedWithoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "ce0a969ffcec5fd2ad01737414fc940f7b3e468f36cf429690cac8bfd9e5dc5d",
          "withoutMetadata": "3940f7d23114187f36c32c2a6d8ba428f374f9be1b030547b90487b26731797e",
          "linkedWithoutMetadata": "3940f7d23114187f36c32c2a6d8ba428f374f9be1b030547b90487b26731797e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "678aa4e2111cd69ee73c223dc8b24c43128acea65902c07730f20abd51e3f849",
          "withoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904",
          "linkedWithoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "11d0ce2cb880d4b21e2b71d495dc947656c8dd84e8d3395c8618c6d3ef3f229f",
          "withoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4",
          "linkedWithoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "dabcb4264834d433e5fa088338b1319241369752edd365fed9bc5a34731357d8",
          "withoutMetadata": "695b4b54731122b69c6614a9d511245c964c10c8d96f0a88b5b2f232ea0f7177",
          "linkedWithoutMetadata": "695b4b54731122b69c6614a9d511245c964c10c8d96f0a88b5b2f232ea0f7177"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "678aa4e2111cd69ee73c223dc8b24c43128acea65902c07730f20abd51e3f849",
          "withoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904",
          "linkedWithoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "11d0ce2cb880d4b21e2b71d495dc947656c8dd84e8d3395c8618c6d3ef3f229f",
          "withoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4",
          "linkedWithoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "dabcb4264834d433e5fa088338b1319241369752edd365fed9bc5a34731357d8",
          "withoutMetadata": "695b4b54731122b69c6614a9d511245c964c10c8d96f0a88b5b2f232ea0f7177",
          "linkedWithoutMetadata": "695b4b54731122b69c6614a9d511245c964c10c8d96f0a88b5b2f232ea0f7177"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "678aa4e2111cd69ee73c223dc8b24c43128acea65902c07730f20abd51e3f849",
          "withoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904",
          "linkedWithoutMetadata": "3bc197fc699e8f3e9a0f793da362b51bf2acecf6dfd5aeaeb5e0106861139904"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "11d0ce2cb880d4b21e2b71d495dc947656c8dd84e8d3395c8618c6d3ef3f229f",
          "withoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4",
          "linkedWithoutMetadata": "04cead9650a8e41bc754ea5dfd62f5a17b7d72ce66487c47bc3f8ee3587ca4c4"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d6501a06ae8764b48932ca47fd72a48d6ef8d42d27fea6037bb8b57e47397820",
          "withoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d",
          "linkedWithoutMetadata": "018831763c183c99e4ca1235d8572f0a522d1d4d190313586142ded36ef12e3d"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "c593cf90d022504b4bb68639ebd3521cf7a7691e44c6117463507490a1bbb662",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d4d6d348db933532fe7a56011ca4fa30999c178a8ae7ba6010e4a991c514d46a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "953bb93eb09ee867094ef11a928c438384e6b9bf3e14c10fd372e77b72df9571",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "30375b36c3c8114c54888d0035f9f280133cef853f75ffd04ad744dae4ade3e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f9db8a66958849606d8ec9f25965146e64947b0212bc1bd4a3f775e283ffd1de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "withoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b",
          "linkedWithoutMetadata": "b02baf248384e4ef42df054622d47e9df0ee7fb718c504bc822a601eabfbfd4b"
        },
        "inherit": [
          "ERC1967Upgrade",
          "Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UpgradeableBeacon": {
        "src": "contracts/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "00b0a960bf8d111eafb4601d20602e717c243f05a8efa5305bf9fa518560d4fa",
          "withoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977",
          "linkedWithoutMetadata": "5594b199b5141d6058c86ca08ec7d4b41b33f2020e4d5b7b6b82c8d248d76977"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "UpgradeableBeacon",
              "label": "_implementation",
              "type": "t_address",
              "src": "contracts/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f6d37801aaef2681ea51b3b39b0a3cd2835b9f956545ab31e834e1316a4fa68c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "fe7952f87dda80339ac376b4e984ce938fd11f62dad97533d100c12949894b2e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BaseUri": {
        "src": "contracts/BaseUri.sol:9",
        "version": {
          "withMetadata": "93eada038e836a123bc862927e9917d6b420e4ef0dd964071bb68d2944cad034",
          "withoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c",
          "linkedWithoutMetadata": "540e49e18354d7005f25fe9c25b1d2110a64daca6182a64c40acc214b449e17c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "IBaseUri"
        ],
        "libraries": [],
        "methods": [
          "baseUri()",
          "setBaseUri(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BaseUri",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/BaseUri.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreator": {
        "src": "contracts/ForwardCreator.sol:15",
        "version": {
          "withMetadata": "cda9aa085bf5146974fc5fb65a0fc2df988072c242d8e4842bb166a4984fa6b1",
          "withoutMetadata": "944b070c40e60ebeb94fca7a5c08f9c74dd93b2e8b1af5ec57c4deacb51e5039",
          "linkedWithoutMetadata": "944b070c40e60ebeb94fca7a5c08f9c74dd93b2e8b1af5ec57c4deacb51e5039"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setBaseURI(string)",
          "createArtist(string,string)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreator",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreator.sol:24"
            },
            {
              "contract": "ForwardCreator",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:26"
            },
            {
              "contract": "ForwardCreator",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreator.sol:27"
            },
            {
              "contract": "ForwardCreator",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreator.sol:29"
            },
            {
              "contract": "ForwardCreator",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreator.sol:30"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardCreatorV2": {
        "src": "contracts/ForwardCreatorV2.sol:14",
        "version": {
          "withMetadata": "e42f8b99bff379159b30abb9985bcdc91e615a246fcbdf3d5e21f6f3d39310e1",
          "withoutMetadata": "2698fd4291199b852b20688934a5d62bed98701e89b161f18653959a1ea246c8",
          "linkedWithoutMetadata": "2698fd4291199b852b20688934a5d62bed98701e89b161f18653959a1ea246c8"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable",
          "console"
        ],
        "methods": [
          "helloWorld()",
          "initialize()",
          "createArtist(string,string,string)",
          "getSigner(bytes)",
          "setAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardCreatorV2",
              "label": "atArtistId",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardCreatorV2.sol:21"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "admin",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:23"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "DOMAIN_SEPARATOR",
              "type": "t_bytes32",
              "src": "contracts/ForwardCreatorV2.sol:24"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "beaconAddress",
              "type": "t_address",
              "src": "contracts/ForwardCreatorV2.sol:25"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "artistContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ForwardCreatorV2.sol:27"
            },
            {
              "contract": "ForwardCreatorV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardCreatorV2.sol:28"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFT": {
        "src": "contracts/ForwardNFT.sol:15",
        "version": {
          "withMetadata": "c597d19f93dbff79d784fbc1a6e1db55f41cfd13e54dad6a123c7154ce372400",
          "withoutMetadata": "0d48b5c735628d6618fc018642959224790fdff1b3ebcd63d0d125d03de0cd3e",
          "linkedWithoutMetadata": "0d48b5c735628d6618fc018642959224790fdff1b3ebcd63d0d125d03de0cd3e"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "initialize(address,uint256,string,string,string,string,string)",
          "setArtist(string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFT",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFT.sol:31"
            },
            {
              "contract": "ForwardNFT",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFT.sol:34"
            },
            {
              "contract": "ForwardNFT",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFT.sol:37"
            },
            {
              "contract": "ForwardNFT",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFT.sol:40"
            },
            {
              "contract": "ForwardNFT",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFT.sol:41"
            },
            {
              "contract": "ForwardNFT",
              "label": "artist",
              "type": "t_struct(Artist)4738_storage",
              "src": "contracts/ForwardNFT.sol:47"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_struct(Artist)4738_storage": {
              "label": "struct ForwardNFT.Artist",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "instagram",
                  "type": "t_string_storage"
                }
              ]
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardNFTV2": {
        "src": "contracts/ForwardNFTV2.sol:15",
        "version": {
          "withMetadata": "939ab53d572028a09428ab4a6dc19f453102e04852fa99401c1000b47cc7c1cb",
          "withoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446",
          "linkedWithoutMetadata": "9b3a55a6262eb9db3ba7f9920b177982ccd9b3e4304552648196ae3444735446"
        },
        "inherit": [
          "IERC721ReceiverUpgradeable",
          "IERC2981Upgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "CountersUpgradeable"
        ],
        "methods": [
          "helloWorld()",
          "initialize(address,uint256,string,string,string)",
          "setRoyalties(uint256,address payable)",
          "addAdmin(address)",
          "removeAdmin(address)",
          "pause()",
          "unpause()",
          "setBaseURI(string)",
          "getCurrentPrice()",
          "totalSupply()",
          "reserve()",
          "transferReserved(address,uint256)",
          "mint(uint256,address)",
          "withdraw()",
          "onERC721Received(address,address,uint256,bytes)",
          "royaltyInfo(uint256,uint256)",
          "contractURI()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ForwardNFTV2",
              "label": "_tokenIds",
              "type": "t_struct(Counter)2238_storage",
              "src": "contracts/ForwardNFTV2.sol:21"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:24"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_admins",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/ForwardNFTV2.sol:27"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_royaltyBPS",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:30"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_fundingRecipient",
              "type": "t_address_payable",
              "src": "contracts/ForwardNFTV2.sol:31"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "artistId",
              "type": "t_uint256",
              "src": "contracts/ForwardNFTV2.sol:37"
            },
            {
              "contract": "ForwardNFTV2",
              "label": "_hi",
              "type": "t_string_storage",
              "src": "contracts/ForwardNFTV2.sol:39"
            }
          ],
          "types": {
            "t_struct(Counter)2238_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ForwardUpgradeableBeacon": {
        "src": "contracts/ForwardUpgradeableBeacon.sol:6",
        "version": {
          "withMetadata": "b382ee4cac7a4feaa95a024d06684979fa2ea0d0a39748bf571e8ae4ba2222cf",
          "withoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333",
          "linkedWithoutMetadata": "cd9b309772c78c3ee4e31355d8a4ea14c7c98c1c20348fce2d1c3191584f7333"
        },
        "inherit": [
          "UpgradeableBeacon",
          "Ownable",
          "Context",
          "IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ForwardUpgradeableBeacon",
            "src": "contracts/ForwardUpgradeableBeacon.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IBaseUri": {
        "src": "contracts/IBaseUri.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseUri()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "9e98716510dc2ea70295ab0a2094d656ec65a789154f2d7ecb5365179d3056e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}